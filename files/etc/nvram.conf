
# Vserver do not get a node number via registirator and define manually. This ensures that serveral vserver do not change
# there freifunk network ip in case of long network disconnectons. Only nodes 0-15 are able to announce (HNA) ip ranges 
# from ICVPN (when quagga or bird are running and connected to icvpn).
# also register key must be uniq. See http://wiki.freifunk-dresden.de/index.php/Technische_Information#Berechnung_IP_Adressen
ddmesh_node=999999
ddmesh_registerkey=11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff:11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff:00:00:00:00:00:00

# If set to 1, vserver will not announce itself as gateway. normally you do not need to change this.
ddmesh_disable_gateway=0

# used by webpage 
servername=VPN Server <number>

#vserver network interface; this depends on vserver provider (hoster)
ifname=eth0

# mesh_mtu must be set to same value on each node in network.
# If any node (server/router) uses a different value, communication will break !!!
# This mtu is used on backbone interface tbb... and wifi (adhoc) interface. Both interface play the same
# role forming the mesh network. If we have a mixed path with wifi and backbone connections bmxd tunnel paket
# will be blocked (does not fit into link mtu). Same applies when paket are created and passed to the bmxd gateway tunnel.
# If the mtu is set higher, bigger pakets will be created and will be blocked on next node.
# So it is highly important to always set this mtu to 1426 which is calculated from base mtu for pppoe 1492 and considering
# fastd protocol overhead (see fastd documentation) 
mesh_mtu=1426

# this is the secret key which is used to decrypt secured backbone connection
# the corresponding public key should be given to the peers, so those can encrpyt/connect to this server
# To generate the keys: /etc/init.d/S53backbone-fastd genkey
fastd_secret=
fastd_public=

#local dns server. are used to setup correct routing rules, protecting dns
#provided by vserver hoster. mostly you can find these values in /etc/resolv.conf
local_dns=10.255.255.3
local_dns=10.255.255.4

#gps coordinates. see /var/www/sysinfo.cgi and /var/www/sysinfo-json.cgi
#/var/www/sysinfo-json.cgi is still in old version on vserver only used for retrieving data from all knodes.
#but this functionality is not part of Basic Vserver installation, as this service should only run on one or an backup server.
gps_latitude=51.033865
gps_longitude=13.653252
gps_altitude=0
city=Dresden

contact_name=
contact_location=virtuell
contact_email=
contact_note=Vserver

# Freifunk Dresden uses a registrator to assign node number to freifunk router when they register
# this range must match the settings in ddmesh-ipcalc.sh. 
# basic vserver does not use it
#register_temp_node_start=900
#register_temp_node_end=999

# ----- backbone -----------
# bmxd (routing protocol) does only support 240 interfaces (restricted by number of command line arguments)
backbone_max_tunnel=240
backbone_server_enabled=1
backbone_clients_enabled=1

# /etc/init.d/S53backbone will generate the configuration for vtund by using following values.

# --- server settings (accpeted connections) ------
#backbone_range_0=start:number:password:protocol
#backbone_accept_0=node:password:protocol
# for number: see backbone_max_tunnel
# example:
#  backbone_range_0=0:16:PASSWORD:udp
#  backbone_range_0=1000:200:PASSWORD:tcp
# 
# to define a single knode:
#  backbone_accept_1=r1006:PASSWORD:udp
# r1006: 'r' must be used for vtund configuration (used as configuration name)


# --- client settings (outgoing connections) ------
#host values: host:port:password
#backbone_host_0=vpn1.freifunk-dresden.de:5000:PASSWORD:tcp
#backbone_host_0=vpn2.freifunk-dresden.de:5000:PASSWORD:tcp

